{"version":3,"file":"static/js/848.bc3351c8.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/AuthPage.jsx"],"sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from '@mui/material';\nimport styled from '@emotion/styled';\nimport { ErrorMessage } from 'formik';\n\nexport const Container = styled.div `\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 600px;\n    width: 100%;\n    background: var(--welcomeBgColor);\n    background-repeat: no-repeat;\n    background-size: cover;\n`\n\nexport const Content = styled.div `\n  text-align: center;\n  // background: #111;\n  border: 1px solid #9AC43C;\n  border-radius: 20px;\n`\nexport const Menu = styled.div`\n    background: #9AC43C;\n    padding: 30px;\n    display: flex;\n    border-radius: 20px 20px 0 0;\n`;\n\nexport const StyledLink = styled(Link)`\n  left: 160px;\n  top: 40px;\n  font-style: normal;\n  font-weight: var(--fontWeight500);\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: white;\n`;\n\nexport const StyledRegistrationLink = styled(Link)`\n  margin-right: 14px;\n  font-style: normal;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: #111;\n`;\n\nexport const Inputs = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  align-items: center;\n  padding: 30px;\n\n  input {\n    width: 326px;\n    height: 49px;\n    left: 40px;\n    top: 107px;\n    // color: white;\n    background: var(--inputBgColor);\n    opacity: 0.4;\n    border: 1px solid white;\n    padding-left: 18px;\n    box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n    border-radius: 8px;\n    @media screen and (max-width: 768px) {\n        width: 287px;\n\n    }\n  }\n`;\nexport const PasswordInput = styled.div `\n    position: relative;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    gap: 14px;\n`\nexport const PasswordInputField = styled.input`\n  width: 326px;\n  height: 49px;\n  left: 40px;\n  top: 107px;\n  color: var(--lightColor);\n  background: var(--inputBgColor);\n  opacity: 0.4;\n  border: 1px solid white;\n  padding-left: 18px;\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.3);\n  border-radius: 8px;\n`;\n\nexport const PasswordToggle = styled.span`\n    position: absolute;\n    right: 18px;\n    top: 15px;\n    cursor: pointer;\n`;\n\nexport const PasswordIcon = styled(FontAwesomeIcon)`\n    color: var(--passwordColor);\n`;\nexport const Svg = styled.svg`\n  width: 16.5px;\n  height: 16px;\n  top: 50%;\n  right: 4px;\n`;\nexport const RegisterBtn = styled.button`\n    font-style: normal;\n    font-weight: var(--fontWeight500);\n    font-size: 14px;\n    line-height: 21px;\n    text-align: center;\n    letter-spacing: -0.02em;\n    width: 100%;\n    height: 49px;\n    margin-top: 24px;\n    background: rgb(154, 196, 60);\n    border-radius: 8px;\n    // color: white;\n    @media screen and (max-width: 768px) {\n        width: 287px;\n    }\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  font-size: 15px;\n  // color: white;\n`;\n\nexport const GoogleButton = styled.a`\n  height: 45px;\n  border-radius: 6px;\n  background-color: #fafafa;\n  color: #23262a;\n  // opacity: 0.7;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  padding: 14px 15px;\n  margin-top: 16px;\n\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.12;\n\n  &:hover {\n    opacity: 1;\n    scale: 1.05;\n    transition: all 0.4s cubic-bezier(0.25, 0.1, 0.25, 1) 0s;\n  }\n`;","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { register } from '../../redux/auth/authOperations';\nimport { Formik, Field } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\n// import googleLogo from '../../images/googleLogo.svg';\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\nimport {\n  ErrorText,\n  Inputs,\n  Menu,\n  Container,\n  PasswordInput,\n  Content,\n  RegisterBtn,\n  StyledRegistrationLink,\n  StyledLink,\n  PasswordToggle,\n  PasswordIcon,\n  // GoogleButton\n} from './RegisterForm.styled';\nimport { toast } from 'react-toastify';\nimport { useState } from 'react';\n\nconst RegisterSchema = Yup.object().shape({\n  name: Yup.string().required('Ім\\'я обов\\'язкове'),\n  email: Yup.string().min(6, 'Емейл мусить бути більше 6-ти символів').email('Емейл неправильний').required('Емейл обов\\'язковий'),\n  password: Yup.string().min(8, 'Пароль мусить бути більше 8-ми цифр').required('Пароль обов\\'язковий'),\n});\n\nfunction RegistrationPage() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const newUser = {\n      name: event.target.elements.name.value,\n      email: event.target.elements.email.value,\n      password: event.target.elements.password.value,\n    };\n\n    const response = await dispatch(register(newUser));\n\n    if (response.error) {\n      toast.error(\"Щось пішло не так\")\n    } else {\n      navigate('/');\n      toast.success(\"Ви успішно зареєструвалися\")\n    }\n  };\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <Formik initialValues={{ name: '', email: '', password: '' }} validationSchema={RegisterSchema}>\n          <Content>\n            <Menu>\n              <StyledRegistrationLink href=\"register\" underline=\"none\">Реєстрація</StyledRegistrationLink>\n              <StyledLink href=\"login\" underline=\"none\">Вхід</StyledLink>\n            </Menu>\n            <Inputs>\n              <Field autoFocus name=\"name\" type=\"text\" placeholder=\"Ім'я\" />\n              <ErrorText name=\"name\" component=\"div\" />\n              <Field name=\"email\" type=\"email\" placeholder=\"Емейл\" />\n              <ErrorText name=\"email\" component=\"div\" />\n              <PasswordInput>\n                <Field name=\"password\" type={showPassword ? 'text' : 'password'} placeholder=\"Пароль\" />\n                <ErrorText name=\"password\" component=\"div\" />\n                <PasswordToggle className={`${PasswordToggle} ${PasswordIcon}`} onClick={togglePasswordVisibility}>\n                  {showPassword ? (\n                    <PasswordIcon icon={faEyeSlash} width=\"18px\" />\n                  ) : (\n                    <PasswordIcon icon={faEye} width=\"18px\" />\n                  )}\n                </PasswordToggle>\n              </PasswordInput>\n              <RegisterBtn type=\"submit\">Зареєструватися</RegisterBtn>\n              <ErrorText name=\"submit\" component=\"div\" />\n\n              {/* <GoogleButton href=\"https://lata-project-backend.onrender.com/api/auth/google\">\n                <img height={25} width={25} alt=\"googleLogo\" src={googleLogo} />\n                Sign up with Google\n              </GoogleButton> */}\n            </Inputs>\n          </Content>\n        </Formik>\n      </form>\n    </Container>\n  );\n}\n\nexport default RegistrationPage;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from '@mui/material';\nimport styled from '@emotion/styled';\nimport { ErrorMessage } from 'formik';\n\nexport const Container = styled.div `\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 600px;\n  width: 100%;\n  background: var(--welcomeBgColor);\n  background-repeat: no-repeat;\n  background-size: cover;\n`\nexport const Content = styled.div `\n  text-align: center;\n  // background: #111;\n  border-radius: 20px;\n  border: 1px solid #9AC43C;\n`\nexport const Menu = styled.div`\n    background: #9AC43C;\n    padding: 30px;\n    display: flex;\n    border-radius: 20px 20px 0 0;\n`;\n\nexport const StyledLink = styled(Link)`\n  left: 160px;\n  top: 40px;\n  font-style: normal;\n  font-weight: var(--fontWeight500);\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: #111;\n`;\n\nexport const StyledRegistrationLink = styled(Link)`\n  margin-right: 14px;\n  font-style: normal;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: white;\n`;\n\nexport const Inputs = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  align-items: center;\n  padding: 30px;\n\n  input {\n    width: 326px;\n    height: 49px;\n    left: 40px;\n    top: 107px;\n    // color: white;\n    background: var(--inputBgColor);\n    opacity: 0.4;\n    border: 1px solid white;\n    padding-left: 18px;\n    box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n    border-radius: 8px;\n    @media screen and (max-width: 768px) {\n        width: 287px;\n\n    }\n  }\n`;\nexport const PasswordInput = styled.div `\n    position: relative;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    gap: 14px;\n`\nexport const PasswordInputField = styled.input`\n  width: 326px;\n  height: 49px;\n  left: 40px;\n  top: 107px;\n  color: var(--lightColor);\n  background: var(--inputBgColor);\n  opacity: 0.4;\n  border: 1px solid white;\n  padding-left: 18px;\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  border-radius: 8px;\n`;\n\nexport const PasswordToggle = styled.span`\n    position: absolute;\n    right: 18px;\n    top: 15px;\n    cursor: pointer;\n    color: var(--passwordColor);\n`;\n\nexport const PasswordIcon = styled(FontAwesomeIcon)`\n    color: var(--passwordColor);\n`;\nexport const Svg = styled.svg`\n  width: 16.5px;\n  height: 16px;\n  top: 50%;\n  right: 4px;\n`;\nexport const LoginBtn = styled.button`\n    font-style: normal;\n    font-weight: var(--fontWeight500);\n    font-size: 14px;\n    line-height: 21px;\n    text-align: center;\n    margin-top: 24px;\n    letter-spacing: -0.02em;\n    width: 100%;\n    height: 49px;\n    background: rgb(154, 196, 60);\n    border-radius: 8px;\n    color: #000;\n    @media screen and (max-width: 768px) {\n        width: 287px;\n    }\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  font-size: 15px;\n  color: #000;\n`;","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { login } from '../../redux/auth/authOperations';\nimport { useDispatch } from 'react-redux';\nimport {\n  ErrorText,\n  Menu,\n  Inputs,\n  Container,\n  PasswordInput,\n  Content,\n  LoginBtn,\n  StyledRegistrationLink,\n  StyledLink,\n  PasswordToggle,\n  PasswordIcon,\n} from './LoginForm.styled';\nimport { setToken } from '../../redux/auth/authSelectors';\nimport { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\n\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string().email('Емейл неправильний').required('Емейл обов\\'язковий'),\n  password: Yup.string().min(8, 'Пароль мусить бути більше 8 букв').required('Пароль обов\\'язковий'),\n});\n\nfunction LoginPage() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const currentUser = {\n      email: event.target.elements.email.value,\n      password: event.target.elements.password.value,\n    };\n\n    const response = await dispatch(login(currentUser, setToken));\n\n    if (response.error) {\n      toast.error();\n    } else {\n      navigate('/');\n      toast.success('Ви успішно залогінились')\n    }\n  };\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <Formik initialValues={{ email: '', password: '' }} validationSchema={LoginSchema} >\n          <Content>\n            <Menu>\n                <StyledRegistrationLink href=\"register\" underline=\"none\">Реєстрація</StyledRegistrationLink>\n                <StyledLink href=\"login\" underline=\"none\">Вхід</StyledLink>\n            </Menu>\n            <Inputs>\n              <Field autoFocus name=\"email\" type=\"email\" placeholder=\"Емейл\" />\n              <ErrorText name=\"email\" component=\"div\" />\n              {/* <PasswordInput>\n                <Field type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                />\n                <ErrorText name=\"password\" component=\"div\" />\n              </PasswordInput> */}\n\n\n              <PasswordInput>\n                <Field name=\"password\" type={showPassword ? 'text' : 'password'} placeholder=\"Пароль\" />\n                <ErrorText name=\"password\" component=\"div\" />\n                <PasswordToggle className={`${PasswordToggle} ${PasswordIcon}`} onClick={togglePasswordVisibility}>\n                  {showPassword ? (\n                    <PasswordIcon icon={faEyeSlash} width=\"18px\" />\n                  ) : (\n                    <PasswordIcon icon={faEye} width=\"18px\" />\n                  )}\n                </PasswordToggle>\n              </PasswordInput>\n\n\n\n              <LoginBtn type=\"submit\">Увійти</LoginBtn>\n              <ErrorText name=\"submit\" component=\"div\" />\n            </Inputs>\n          </Content>\n        </Formik>\n      </form>\n    </Container>\n  );\n}\n\nexport default LoginPage;","import { useParams } from \"react-router-dom\";\nimport RegisterForm from \"../components/RegisterForm/RegisterForm\";\nimport LoginForm from \"../components/LoginForm/LoginForm\";\n\nconst AuthPage = () => {\n  const { id } = useParams();\n  return (\n    <div>\n      {id === \"login\" && <LoginForm />}\n      {id === \"register\" && <RegisterForm />}\n    </div>\n  );\n};\nexport default AuthPage;\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","Menu","_templateObject3","StyledLink","Link","_templateObject4","StyledRegistrationLink","_templateObject5","Inputs","_templateObject6","PasswordInput","_templateObject7","PasswordToggle","input","_templateObject8","span","_templateObject9","PasswordIcon","FontAwesomeIcon","_templateObject10","RegisterBtn","svg","_templateObject11","button","_templateObject12","ErrorText","ErrorMessage","_templateObject13","a","_templateObject14","RegisterSchema","Yup","shape","name","required","email","min","password","navigate","useNavigate","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","newUser","wrap","_context","prev","next","preventDefault","target","elements","value","register","sent","error","toast","success","stop","_x","apply","arguments","_jsx","children","onSubmit","Formik","initialValues","validationSchema","_jsxs","href","underline","Field","autoFocus","type","placeholder","component","className","concat","onClick","icon","faEyeSlash","width","faEye","LoginBtn","LoginSchema","currentUser","login","setToken","id","useParams","LoginForm","RegisterForm"],"sourceRoot":""}