{"version":3,"file":"static/js/848.0417ca45.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/AuthPage.jsx"],"sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from '@mui/material';\nimport styled from '@emotion/styled';\nimport { ErrorMessage } from 'formik';\n\nexport const Container = styled.div `\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 600px;\n    width: 100%;\n    background: var(--welcomeBgColor);\n    background-repeat: no-repeat;\n    background-size: cover;\n`\nexport const Content = styled.div `\n  text-align: center;\n  background: #111;\n  border-radius: 20px;\n  @media screen and (max-width: 768px) {\n    ;\n  }\n`\nexport const Menu = styled.div`\n    background: #9AC43C;\n    padding: 30px;\n    display: flex;\n    border-radius: 20px 20px 0 0;\n`;\n\nexport const StyledLink = styled(Link)`\n  left: 160px;\n  top: 40px;\n  font-style: normal;\n  font-weight: var(--fontWeight500);\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: white;\n`;\n\nexport const StyledRegistrationLink = styled(Link)`\n  margin-right: 14px;\n  font-style: normal;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: #111;\n`;\n\nexport const Inputs = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  align-items: center;\n  padding: 30px;\n\n  input {\n    width: 326px;\n    height: 49px;\n    left: 40px;\n    top: 107px;\n    color: white;\n    background: var(--inputBgColor);\n    opacity: 0.4;\n    border: 1px solid white;\n    padding-left: 18px;\n    box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n    border-radius: 8px;\n    @media screen and (max-width: 768px) {\n        width: 287px;\n\n    }\n  }\n`;\nexport const PasswordInput = styled.div `\n    position: relative;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    gap: 14px;\n`\nexport const PasswordInputField = styled.input`\n  width: 326px;\n  height: 49px;\n  left: 40px;\n  top: 107px;\n  color: var(--lightColor);\n  background: var(--inputBgColor);\n  opacity: 0.4;\n  border: 1px solid white;\n  padding-left: 18px;\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  border-radius: 8px;\n`;\n\nexport const PasswordToggle = styled.span`\n    position: absolute;\n    right: 18px;\n    top: 19px;\n    cursor: pointer;\n    color: var(--passwordColor);\n`;\n\nexport const PasswordIcon = styled(FontAwesomeIcon)`\n    color: var(--passwordColor);\n`;\nexport const Svg = styled.svg`\n  width: 16.5px;\n  height: 16px;\n  top: 50%;\n  right: 4px;\n`;\nexport const RegisterBtn = styled.button`\n    font-style: normal;\n    font-weight: var(--fontWeight500);\n    font-size: 14px;\n    line-height: 21px;\n    text-align: center;\n    letter-spacing: -0.02em;\n    width: 100%;\n    height: 49px;\n    margin-top: 24px;\n    background: rgb(154, 196, 60);\n    border-radius: 8px;\n    color: white;\n    @media screen and (max-width: 768px) {\n        width: 287px;\n    }\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  font-size: 15px;\n  color: white;\n`;","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { register } from '../../redux/auth/authOperations';\nimport { Formik, Field } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\nimport {\n  ErrorText,\n  Inputs,\n  Menu,\n  Container,\n  PasswordInput,\n  Content,\n  RegisterBtn,\n  StyledRegistrationLink,\n  StyledLink,\n} from './RegisterForm.styled';\n\nconst RegisterSchema = Yup.object().shape({\n  name: Yup.string().required('Ім\\'я обов\\'язкове'),\n  email: Yup.string().min(6, 'Емейл мусить бути більше 6-ти символів').email('Емейл неправильний').required('Емейл обов\\'язковий'),\n  password: Yup.string().min(8, 'Пароль мусить бути більше 8-ми цифр').required('Пароль обов\\'язковий'),\n});\n\nfunction RegistrationPage() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const newUser = {\n      name: event.target.elements.name.value,\n      email: event.target.elements.email.value,\n      password: event.target.elements.password.value,\n    };\n\n    const response = await dispatch(register(newUser));\n\n    if (response.error) {\n      console.log(\"Щось пішло не так\")\n    } else {\n      navigate('/');\n      console.log(\"Ви успішно зареєструвалися\")\n    }\n  };\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <Formik initialValues={{ name: '', email: '', password: '' }} validationSchema={RegisterSchema}>\n          <Content>\n            <Menu>\n              <StyledRegistrationLink href=\"register\" underline=\"none\">\n                Registration\n              </StyledRegistrationLink>\n              <StyledLink href=\"login\" underline=\"none\">\n                Log In\n              </StyledLink>\n            </Menu>\n            <Inputs>\n              <Field autoFocus name=\"name\" type=\"text\" placeholder=\"Name\" />\n              <ErrorText name=\"name\" component=\"div\" />\n              <Field name=\"email\" type=\"email\" placeholder=\"Email\" />\n              <ErrorText name=\"email\" component=\"div\" />\n              <PasswordInput>\n              <Field name=\"password\" type=\"password\"\n                //   type={showPassword ? 'text' : 'password'} \n                placeholder=\"Password\" />\n              <ErrorText name=\"password\" component=\"div\" />\n                {/* <PasswordToggle\n                  className={`${PasswordToggle} ${PasswordIcon}`}\n                  onClick={togglePasswordVisibility}\n                >\n                  {showPassword ? (\n                    <PasswordIcon icon={faEyeSlash} width=\"18px\" />\n                  ) : (\n                    <Svg>\n                      <use stroke=\"gray\" \n                    //   xlinkHref={`${sprite}#icon-eye`} \n                      />\n                    </Svg>\n                  )}\n                </PasswordToggle> */}\n              </PasswordInput>\n              <RegisterBtn type=\"submit\">Register Now</RegisterBtn>\n            </Inputs>\n          </Content>\n        </Formik>\n      </form>\n    </Container>\n  );\n}\n\nexport default RegistrationPage;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from '@mui/material';\nimport styled from '@emotion/styled';\nimport { ErrorMessage } from 'formik';\n\nexport const Container = styled.div `\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 600px;\n    width: 100%;\n    background: var(--welcomeBgColor);\n    background-repeat: no-repeat;\n    background-size: cover;\n`\nexport const Content = styled.div `\n  text-align: center;\n  background: #111;\n  border-radius: 20px;\n`\nexport const Menu = styled.div`\n    background: #9AC43C;\n    padding: 30px;\n    display: flex;\n    border-radius: 20px 20px 0 0;\n`;\n\nexport const StyledLink = styled(Link)`\n  left: 160px;\n  top: 40px;\n  font-style: normal;\n  font-weight: var(--fontWeight500);\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: #111;\n`;\n\nexport const StyledRegistrationLink = styled(Link)`\n  margin-right: 14px;\n  font-style: normal;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: white;\n`;\n\nexport const Inputs = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  align-items: center;\n  padding: 30px;\n\n  input {\n    width: 326px;\n    height: 49px;\n    left: 40px;\n    top: 107px;\n    color: white;\n    background: var(--inputBgColor);\n    opacity: 0.4;\n    border: 1px solid white;\n    padding-left: 18px;\n    box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n    border-radius: 8px;\n    @media screen and (max-width: 768px) {\n        width: 287px;\n\n    }\n  }\n`;\nexport const PasswordInput = styled.div `\n    position: relative;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    gap: 14px;\n`\nexport const PasswordInputField = styled.input`\n  width: 326px;\n  height: 49px;\n  left: 40px;\n  top: 107px;\n  color: var(--lightColor);\n  background: var(--inputBgColor);\n  opacity: 0.4;\n  border: 1px solid white;\n  padding-left: 18px;\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  border-radius: 8px;\n`;\n\nexport const PasswordToggle = styled.span`\n    position: absolute;\n    right: 18px;\n    top: 19px;\n    cursor: pointer;\n    color: var(--passwordColor);\n`;\n\nexport const PasswordIcon = styled(FontAwesomeIcon)`\n    color: var(--passwordColor);\n`;\nexport const Svg = styled.svg`\n  width: 16.5px;\n  height: 16px;\n  top: 50%;\n  right: 4px;\n`;\nexport const LoginBtn = styled.button`\n    font-style: normal;\n    font-weight: var(--fontWeight500);\n    font-size: 14px;\n    line-height: 21px;\n    text-align: center;\n    margin-top: 24px;\n    letter-spacing: -0.02em;\n    width: 100%;\n    height: 49px;\n    background: rgb(154, 196, 60);\n    border-radius: 8px;\n    color: white;\n    @media screen and (max-width: 768px) {\n        width: 287px;\n    }\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  font-size: 15px;\n  color: white;\n`;","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { login } from '../../redux/auth/authOperations';\nimport { useDispatch } from 'react-redux';\nimport {\n  ErrorText,\n  Menu,\n  Inputs,\n  Container,\n  PasswordInput,\n  Content,\n  LoginBtn,\n  StyledRegistrationLink,\n  StyledLink,\n} from './LoginForm.styled';\nimport { setToken } from '../../redux/auth/authSelectors';\nimport { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\n\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string().email('Емейл неправильний').required('Емейл обов\\'язковий'),\n  password: Yup.string().min(8, 'Пароль мусить бути більше 8 букв').required('Пароль обов\\'язковий'),\n});\n\nfunction LoginPage() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const currentUser = {\n      email: event.target.elements.email.value,\n      password: event.target.elements.password.value,\n    };\n\n    const response = await dispatch(login(currentUser, setToken));\n\n    if (response.error) {\n      toast.error();\n    } else {\n      navigate('/');\n    }\n  };\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <Formik initialValues={{ email: '', password: '' }} validationSchema={LoginSchema} >\n          <Content>\n            <Menu>\n                <StyledRegistrationLink href=\"register\" underline=\"none\">\n                  Registration\n                </StyledRegistrationLink>\n                <StyledLink href=\"login\" underline=\"none\">\n                  Log In\n                </StyledLink>\n            </Menu>\n            <Inputs>\n              <Field autoFocus name=\"email\" type=\"email\" placeholder=\"Email\" />\n              <ErrorText name=\"email\" component=\"div\" />\n              <PasswordInput>\n                <Field type=\"password\"\n                  name=\"password\"\n                //   type={showPassword ? 'text' : 'password'}\n                  placeholder=\"Password\"\n                />\n                <ErrorText name=\"password\" component=\"div\" />\n\n                {/* <PasswordToggle\n                  className={`${PasswordToggle} ${PasswordIcon}`}\n                //   onClick={togglePasswordVisibility}\n                >\n                  {/* {showPassword ? (\n                    <PasswordIcon icon={faEyeSlash} width=\"18px\" />\n                  ) : (\n                    <Svg>\n                      <use\n                        stroke=\"gray\"\n                        // xlinkHref={`${sprite}#icon-eye`}\n                        style={{ color: '#737373' }}\n                      />\n                    </Svg>\n                  )}\n                </PasswordToggle> */}\n              </PasswordInput>\n              <LoginBtn type=\"submit\">Log In Now</LoginBtn>\n            </Inputs>\n          </Content>\n        </Formik>\n      </form>\n    </Container>\n  );\n}\n\nexport default LoginPage;","import { useParams } from \"react-router-dom\";\nimport RegisterForm from \"../components/RegisterForm/RegisterForm\";\nimport LoginForm from \"../components/LoginForm/LoginForm\";\n\nconst AuthPage = () => {\n  const { id } = useParams();\n  return (\n    <div>\n      {id === \"login\" && <LoginForm />}\n      {id === \"register\" && <RegisterForm />}\n    </div>\n  );\n};\nexport default AuthPage;\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","Menu","_templateObject3","StyledLink","Link","_templateObject4","StyledRegistrationLink","_templateObject5","Inputs","_templateObject6","PasswordInput","_templateObject7","RegisterBtn","input","_templateObject8","span","_templateObject9","FontAwesomeIcon","_templateObject10","svg","_templateObject11","button","_templateObject12","ErrorText","ErrorMessage","_templateObject13","RegisterSchema","Yup","shape","name","required","email","min","password","navigate","useNavigate","dispatch","useDispatch","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","newUser","wrap","_context","prev","next","preventDefault","target","elements","value","register","sent","error","console","log","stop","_x","apply","arguments","_jsx","children","onSubmit","Formik","initialValues","validationSchema","_jsxs","href","underline","Field","autoFocus","type","placeholder","component","LoginBtn","LoginSchema","currentUser","login","setToken","toast","id","useParams","LoginForm","RegisterForm"],"sourceRoot":""}