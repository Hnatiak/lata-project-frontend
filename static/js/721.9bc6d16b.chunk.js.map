{"version":3,"file":"static/js/721.9bc6d16b.chunk.js","mappings":"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","sources":["images/googleLogo.svg","components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/AuthPage.jsx"],"sourcesContent":["var _style, _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgGoogleLogo(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    style: {\n      enableBackground: \"new 0 0 150 150\"\n    },\n    viewBox: \"0 0 150 150\",\n    xmlSpace: \"preserve\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#1A73E8;}\\n\\t.st1{fill:#EA4335;}\\n\\t.st2{fill:#4285F4;}\\n\\t.st3{fill:#FBBC04;}\\n\\t.st4{fill:#34A853;}\\n\\t.st5{fill:#4CAF50;}\\n\\t.st6{fill:#1E88E5;}\\n\\t.st7{fill:#E53935;}\\n\\t.st8{fill:#C62828;}\\n\\t.st9{fill:#FBC02D;}\\n\\t.st10{fill:#1565C0;}\\n\\t.st11{fill:#2E7D32;}\\n\\t.st12{fill:#F6B704;}\\n\\t.st13{fill:#E54335;}\\n\\t.st14{fill:#4280EF;}\\n\\t.st15{fill:#34A353;}\\n\\t.st16{clip-path:url(#SVGID_2_);}\\n\\t.st17{fill:#188038;}\\n\\t.st18{opacity:0.2;fill:#FFFFFF;enable-background:new    ;}\\n\\t.st19{opacity:0.3;fill:#0D652D;enable-background:new    ;}\\n\\t.st20{clip-path:url(#SVGID_4_);}\\n\\t.st21{opacity:0.3;fill:url(#_45_shadow_1_);enable-background:new    ;}\\n\\t.st22{clip-path:url(#SVGID_6_);}\\n\\t.st23{fill:#FA7B17;}\\n\\t.st24{opacity:0.3;fill:#174EA6;enable-background:new    ;}\\n\\t.st25{opacity:0.3;fill:#A50E0E;enable-background:new    ;}\\n\\t.st26{opacity:0.3;fill:#E37400;enable-background:new    ;}\\n\\t.st27{fill:url(#Finish_mask_1_);}\\n\\t.st28{fill:#FFFFFF;}\\n\\t.st29{fill:#0C9D58;}\\n\\t.st30{opacity:0.2;fill:#004D40;enable-background:new    ;}\\n\\t.st31{opacity:0.2;fill:#3E2723;enable-background:new    ;}\\n\\t.st32{fill:#FFC107;}\\n\\t.st33{opacity:0.2;fill:#1A237E;enable-background:new    ;}\\n\\t.st34{opacity:0.2;}\\n\\t.st35{fill:#1A237E;}\\n\\t.st36{fill:url(#SVGID_7_);}\\n\\t.st37{fill:#FBBC05;}\\n\\t.st38{clip-path:url(#SVGID_9_);fill:#E53935;}\\n\\t.st39{clip-path:url(#SVGID_11_);fill:#FBC02D;}\\n\\t.st40{clip-path:url(#SVGID_13_);fill:#E53935;}\\n\\t.st41{clip-path:url(#SVGID_15_);fill:#FBC02D;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st14\",\n    d: \"M120,76.1c0-3.1-0.3-6.3-0.8-9.3H75.9v17.7h24.8c-1,5.7-4.3,10.7-9.2,13.9l14.8,11.5   C115,101.8,120,90,120,76.1L120,76.1z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st15\",\n    d: \"M75.9,120.9c12.4,0,22.8-4.1,30.4-11.1L91.5,98.4c-4.1,2.8-9.4,4.4-15.6,4.4c-12,0-22.1-8.1-25.8-18.9   L34.9,95.6C42.7,111.1,58.5,120.9,75.9,120.9z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st12\",\n    d: \"M50.1,83.8c-1.9-5.7-1.9-11.9,0-17.6L34.9,54.4c-6.5,13-6.5,28.3,0,41.2L50.1,83.8z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st13\",\n    d: \"M75.9,47.3c6.5-0.1,12.9,2.4,17.6,6.9L106.6,41C98.3,33.2,87.3,29,75.9,29.1c-17.4,0-33.2,9.8-41,25.3   l15.2,11.8C53.8,55.3,63.9,47.3,75.9,47.3z\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGoogleLogo);\nexport default __webpack_public_path__ + \"static/media/googleLogo.efa560d32653a615a1db742bbf78c815.svg\";\nexport { ForwardRef as ReactComponent };","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from '@mui/material';\nimport styled from '@emotion/styled';\nimport { ErrorMessage } from 'formik';\n\nexport const Container = styled.div `\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 600px;\n    width: 100%;\n    background: var(--welcomeBgColor);\n    background-repeat: no-repeat;\n    background-size: cover;\n`\n\nexport const Content = styled.div `\n  text-align: center;\n  // background: #111;\n  border: 1px solid #9AC43C;\n  border-radius: 20px;\n  @media screen and (max-width: 768px) {\n    ;\n  }\n`\nexport const Menu = styled.div`\n    background: #9AC43C;\n    padding: 30px;\n    display: flex;\n    border-radius: 20px 20px 0 0;\n`;\n\nexport const StyledLink = styled(Link)`\n  left: 160px;\n  top: 40px;\n  font-style: normal;\n  font-weight: var(--fontWeight500);\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: white;\n`;\n\nexport const StyledRegistrationLink = styled(Link)`\n  margin-right: 14px;\n  font-style: normal;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: #111;\n`;\n\nexport const Inputs = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  align-items: center;\n  padding: 30px;\n\n  input {\n    width: 326px;\n    height: 49px;\n    left: 40px;\n    top: 107px;\n    // color: white;\n    background: var(--inputBgColor);\n    opacity: 0.4;\n    border: 1px solid white;\n    padding-left: 18px;\n    box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n    border-radius: 8px;\n    @media screen and (max-width: 768px) {\n        width: 287px;\n\n    }\n  }\n`;\nexport const PasswordInput = styled.div `\n    position: relative;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    gap: 14px;\n`\nexport const PasswordInputField = styled.input`\n  width: 326px;\n  height: 49px;\n  left: 40px;\n  top: 107px;\n  color: var(--lightColor);\n  background: var(--inputBgColor);\n  opacity: 0.4;\n  border: 1px solid white;\n  padding-left: 18px;\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  border-radius: 8px;\n`;\n\nexport const PasswordToggle = styled.span`\n    position: absolute;\n    right: 18px;\n    top: 15px;\n    cursor: pointer;\n`;\n\nexport const PasswordIcon = styled(FontAwesomeIcon)`\n    color: var(--passwordColor);\n`;\nexport const Svg = styled.svg`\n  width: 16.5px;\n  height: 16px;\n  top: 50%;\n  right: 4px;\n`;\nexport const RegisterBtn = styled.button`\n    font-style: normal;\n    font-weight: var(--fontWeight500);\n    font-size: 14px;\n    line-height: 21px;\n    text-align: center;\n    letter-spacing: -0.02em;\n    width: 100%;\n    height: 49px;\n    margin-top: 24px;\n    background: rgb(154, 196, 60);\n    border-radius: 8px;\n    // color: white;\n    @media screen and (max-width: 768px) {\n        width: 287px;\n    }\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  font-size: 15px;\n  // color: white;\n`;\n\nexport const GoogleButton = styled.a`\n  height: 45px;\n  border-radius: 6px;\n  background-color: #fafafa;\n  color: #23262a;\n  opacity: 0.7;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  margin-top: 16px;\n\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.12;\n\n  &:hover {\n    opacity: 1;\n    transition: all 0.4s cubic-bezier(0.25, 0.1, 0.25, 1) 0s;\n  }\n`;","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { register } from '../../redux/auth/authOperations';\nimport { Formik, Field } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\nimport googleLogo from '../../images/googleLogo.svg';\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\nimport {\n  ErrorText,\n  Inputs,\n  Menu,\n  Container,\n  PasswordInput,\n  Content,\n  RegisterBtn,\n  StyledRegistrationLink,\n  StyledLink,\n  PasswordToggle,\n  PasswordIcon,\n  GoogleButton\n} from './RegisterForm.styled';\nimport { toast } from 'react-toastify';\nimport { useState } from 'react';\n\nconst RegisterSchema = Yup.object().shape({\n  name: Yup.string().required('Ім\\'я обов\\'язкове'),\n  email: Yup.string().min(6, 'Емейл мусить бути більше 6-ти символів').email('Емейл неправильний').required('Емейл обов\\'язковий'),\n  password: Yup.string().min(8, 'Пароль мусить бути більше 8-ми цифр').required('Пароль обов\\'язковий'),\n});\n\n\nfunction RegistrationPage() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const newUser = {\n      name: event.target.elements.name.value,\n      email: event.target.elements.email.value,\n      password: event.target.elements.password.value,\n    };\n\n    const response = await dispatch(register(newUser));\n\n    if (response.error) {\n      \n      toast.error(\"Щось пішло не так\")\n    } else {\n      navigate('/');\n      toast.success(\"Ви успішно зареєструвалися\")\n    }\n  };\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <Formik initialValues={{ name: '', email: '', password: '' }} validationSchema={RegisterSchema}>\n          <Content>\n            <Menu>\n              <StyledRegistrationLink href=\"register\" underline=\"none\">\n                Registration\n              </StyledRegistrationLink>\n              <StyledLink href=\"login\" underline=\"none\">\n                Log In\n              </StyledLink>\n            </Menu>\n            <Inputs>\n              <Field autoFocus name=\"name\" type=\"text\" placeholder=\"Name\" />\n              <ErrorText name=\"name\" component=\"div\" />\n              <Field name=\"email\" type=\"email\" placeholder=\"Email\" />\n              <ErrorText name=\"email\" component=\"div\" />\n              <PasswordInput>\n              <Field name=\"password\" type={showPassword ? 'text' : 'password'} placeholder=\"Password\" />\n              <ErrorText name=\"password\" component=\"div\" />\n                <PasswordToggle className={`${PasswordToggle} ${PasswordIcon}`} onClick={togglePasswordVisibility}>\n                  {showPassword ? (\n                    <PasswordIcon icon={faEyeSlash} width=\"18px\" />\n                  ) : (\n                    <PasswordIcon icon={faEye} width=\"18px\" />\n                  )}\n                </PasswordToggle>\n              </PasswordInput>\n              <RegisterBtn type=\"submit\">Register Now</RegisterBtn>\n              <ErrorText name=\"submit\" component=\"div\" />\n\n              <GoogleButton href=\"https://lata-project-backend.onrender.com/api/auth/google\">\n                <img style={{ marginLeft: 8 }} height={25} width={25} alt=\"googleLogo\" src={googleLogo} />\n                Sign up with Google\n              </GoogleButton>\n            </Inputs>\n          </Content>\n        </Formik>\n      </form>\n    </Container>\n  );\n}\n\nexport default RegistrationPage;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from '@mui/material';\nimport styled from '@emotion/styled';\nimport { ErrorMessage } from 'formik';\n\nexport const Container = styled.div `\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 600px;\n    width: 100%;\n    background: var(--welcomeBgColor);\n    background-repeat: no-repeat;\n    background-size: cover;\n`\nexport const Content = styled.div `\n  text-align: center;\n  background: #111;\n  border-radius: 20px;\n`\nexport const Menu = styled.div`\n    background: #9AC43C;\n    padding: 30px;\n    display: flex;\n    border-radius: 20px 20px 0 0;\n`;\n\nexport const StyledLink = styled(Link)`\n  left: 160px;\n  top: 40px;\n  font-style: normal;\n  font-weight: var(--fontWeight500);\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: #111;\n`;\n\nexport const StyledRegistrationLink = styled(Link)`\n  margin-right: 14px;\n  font-style: normal;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: white;\n`;\n\nexport const Inputs = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  align-items: center;\n  padding: 30px;\n\n  input {\n    width: 326px;\n    height: 49px;\n    left: 40px;\n    top: 107px;\n    color: white;\n    background: var(--inputBgColor);\n    opacity: 0.4;\n    border: 1px solid white;\n    padding-left: 18px;\n    box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n    border-radius: 8px;\n    @media screen and (max-width: 768px) {\n        width: 287px;\n\n    }\n  }\n`;\nexport const PasswordInput = styled.div `\n    position: relative;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    gap: 14px;\n`\nexport const PasswordInputField = styled.input`\n  width: 326px;\n  height: 49px;\n  left: 40px;\n  top: 107px;\n  color: var(--lightColor);\n  background: var(--inputBgColor);\n  opacity: 0.4;\n  border: 1px solid white;\n  padding-left: 18px;\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  border-radius: 8px;\n`;\n\nexport const PasswordToggle = styled.span`\n    position: absolute;\n    right: 18px;\n    top: 19px;\n    cursor: pointer;\n    color: var(--passwordColor);\n`;\n\nexport const PasswordIcon = styled(FontAwesomeIcon)`\n    color: var(--passwordColor);\n`;\nexport const Svg = styled.svg`\n  width: 16.5px;\n  height: 16px;\n  top: 50%;\n  right: 4px;\n`;\nexport const LoginBtn = styled.button`\n    font-style: normal;\n    font-weight: var(--fontWeight500);\n    font-size: 14px;\n    line-height: 21px;\n    text-align: center;\n    margin-top: 24px;\n    letter-spacing: -0.02em;\n    width: 100%;\n    height: 49px;\n    background: rgb(154, 196, 60);\n    border-radius: 8px;\n    color: white;\n    @media screen and (max-width: 768px) {\n        width: 287px;\n    }\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  font-size: 15px;\n  color: white;\n`;","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { login } from '../../redux/auth/authOperations';\nimport { useDispatch } from 'react-redux';\nimport {\n  ErrorText,\n  Menu,\n  Inputs,\n  Container,\n  PasswordInput,\n  Content,\n  LoginBtn,\n  StyledRegistrationLink,\n  StyledLink,\n} from './LoginForm.styled';\nimport { setToken } from '../../redux/auth/authSelectors';\nimport { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string().email('Емейл неправильний').required('Емейл обов\\'язковий'),\n  password: Yup.string().min(8, 'Пароль мусить бути більше 8 букв').required('Пароль обов\\'язковий'),\n});\n\nfunction LoginPage() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const currentUser = {\n      email: event.target.elements.email.value,\n      password: event.target.elements.password.value,\n    };\n\n    const response = await dispatch(login(currentUser, setToken));\n\n    if (response.error) {\n      toast.error();\n    } else {\n      navigate('/');\n      toast.success('Ви успішно залогінились')\n    }\n  };\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <Formik initialValues={{ email: '', password: '' }} validationSchema={LoginSchema} >\n          <Content>\n            <Menu>\n                <StyledRegistrationLink href=\"register\" underline=\"none\">\n                  Registration\n                </StyledRegistrationLink>\n                <StyledLink href=\"login\" underline=\"none\">\n                  Log In\n                </StyledLink>\n            </Menu>\n            <Inputs>\n              <Field autoFocus name=\"email\" type=\"email\" placeholder=\"Email\" />\n              <ErrorText name=\"email\" component=\"div\" />\n              <PasswordInput>\n                <Field type=\"password\"\n                  name=\"password\"\n                //   type={showPassword ? 'text' : 'password'}\n                  placeholder=\"Password\"\n                />\n                <ErrorText name=\"password\" component=\"div\" />\n\n                {/* <PasswordToggle\n                  className={`${PasswordToggle} ${PasswordIcon}`}\n                //   onClick={togglePasswordVisibility}\n                >\n                  {/* {showPassword ? (\n                    <PasswordIcon icon={faEyeSlash} width=\"18px\" />\n                  ) : (\n                    <Svg>\n                      <use\n                        stroke=\"gray\"\n                        // xlinkHref={`${sprite}#icon-eye`}\n                        style={{ color: '#737373' }}\n                      />\n                    </Svg>\n                  )}\n                </PasswordToggle> */}\n              </PasswordInput>\n              <LoginBtn type=\"submit\">Log In Now</LoginBtn>\n              <ErrorText name=\"submit\" component=\"div\" />\n            </Inputs>\n          </Content>\n        </Formik>\n      </form>\n    </Container>\n  );\n}\n\nexport default LoginPage;","import { useParams } from \"react-router-dom\";\nimport RegisterForm from \"../components/RegisterForm/RegisterForm\";\nimport LoginForm from \"../components/LoginForm/LoginForm\";\n\nconst AuthPage = () => {\n  const { id } = useParams();\n  return (\n    <div>\n      {id === \"login\" && <LoginForm />}\n      {id === \"register\" && <RegisterForm />}\n    </div>\n  );\n};\nexport default AuthPage;\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","Menu","_templateObject3","StyledLink","Link","_templateObject4","StyledRegistrationLink","_templateObject5","Inputs","_templateObject6","PasswordInput","_templateObject7","PasswordToggle","input","_templateObject8","span","_templateObject9","PasswordIcon","FontAwesomeIcon","_templateObject10","RegisterBtn","svg","_templateObject11","button","_templateObject12","ErrorText","ErrorMessage","_templateObject13","GoogleButton","a","_templateObject14","RegisterSchema","Yup","shape","name","required","email","min","password","navigate","useNavigate","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","newUser","wrap","_context","prev","next","preventDefault","target","elements","value","register","sent","error","toast","success","stop","_x","apply","arguments","_jsx","children","onSubmit","Formik","initialValues","validationSchema","_jsxs","href","underline","Field","autoFocus","type","placeholder","component","className","concat","onClick","icon","faEyeSlash","width","faEye","style","marginLeft","height","alt","src","googleLogo","LoginBtn","LoginSchema","currentUser","login","setToken","id","useParams","LoginForm","RegisterForm"],"sourceRoot":""}