{"version":3,"file":"static/js/652.4b67c334.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","components/LoginForm/LoginForm.styled.js","redux/auth/authSelectors.js","components/LoginForm/LoginForm.jsx","pages/AuthPage.js"],"sourcesContent":["// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { Link } from '@mui/material';\r\n// import styled from '@emotion/styled';\r\n// import { ErrorMessage } from 'formik';\r\n\r\n// export const Container = styled.div `\r\n//     display: flex;\r\n//     align-items: center;\r\n//     justify-content: center;\r\n//     height: 100vh;\r\n//     width: 100%;\r\n//     background: var(--welcomeBgColor);\r\n//     background-repeat: no-repeat;\r\n//     background-size: cover;\r\n// `\r\n// export const Content = styled.div `\r\n//   text-align: center;\r\n//   background: var(--bgColorAuth);\r\n//   border-radius: 8px;\r\n//   padding: 40px;\r\n//   @media screen and (max-width: 768px) {\r\n//     padding: 24px;\r\n//   }\r\n// `\r\n// export const Menu = styled.div`\r\n//   display: flex;\r\n// `;\r\n\r\n// export const StyledLink = styled(Link)`\r\n//   left: 160px;\r\n//   top: 40px;\r\n//   font-style: normal;\r\n//   font-weight: var(--fontWeight500);\r\n//   font-size: var(--fontSize18);\r\n//   line-height: 27px;\r\n//   letter-spacing: -0.02em;\r\n//   color: var(--inputTextColor);\r\n// `;\r\n\r\n// export const StyledRegistrationLink = styled(Link)`\r\n//   margin-right: 14px;\r\n//   font-style: normal;\r\n//   font-weight: var(--fontWeight500);\r\n//   font-size: var(--fontSize18);\r\n//   line-height: 27px;\r\n//   letter-spacing: -0.02em;\r\n//   color: var(--lightColor);\r\n// `;\r\n\r\n// export const Inputs = styled.div`\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   margin-top: 40px;\r\n//   gap: 14px;\r\n\r\n//   input {\r\n//     width: 326px;\r\n//     height: 49px;\r\n//     left: 40px;\r\n//     top: 107px;\r\n//     color: var(--lightColor);\r\n//     background: var(--inputBgColor);\r\n//     opacity: 0.4;\r\n//     border: 1px solid var(--inputBorderFocus);\r\n//     padding-left: 18px;\r\n//     box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\r\n//     border-radius: var(--borderRadius8);\r\n//     @media screen and (max-width: 768px) {\r\n//         width: 287px;\r\n//     }\r\n//   }\r\n// `;\r\n// export const PasswordInput = styled.div `\r\n//     position: relative;\r\n//     display: flex;\r\n//     align-items: center;\r\n//     flex-direction: column;\r\n//     gap: 14px;\r\n// `\r\n// export const PasswordInputField = styled.input`\r\n//   width: 326px;\r\n//   height: 49px;\r\n//   left: 40px;\r\n//   top: 107px;\r\n//   color: var(--lightColor);\r\n//   background: var(--inputBgColor);\r\n//   opacity: 0.4;\r\n//   border: 1px solid var(--inputBorderFocus);\r\n//   padding-left: 18px;\r\n//   box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\r\n//   border-radius: 8px;\r\n// `;\r\n\r\n// export const PasswordToggle = styled.span`\r\n//     position: absolute;\r\n//     right: 18px;\r\n//     top: 19px;\r\n//     cursor: pointer;\r\n//     color: var(--passwordColor);\r\n// `;\r\n\r\n// export const PasswordIcon = styled(FontAwesomeIcon)`\r\n//     color: var(--passwordColor);\r\n// `;\r\n// export const Svg = styled.svg`\r\n//     width: 16.5px;\r\n//     height: 16px;\r\n//     top: 50%;\r\n//     right: 4px;\r\n// `;\r\n// export const RegisterBtn = styled.button`\r\n//     font-style: normal;\r\n//     font-weight: var(--fontWeight500);\r\n//     font-size: var(--fontSize14);\r\n//     line-height: 21px;\r\n//     text-align: center;\r\n//     letter-spacing: -0.02em;\r\n//     width: 100%;\r\n//     height: 49px;\r\n//     margin-top: 24px;\r\n//     background: var(--inputBorderFocus);\r\n//     border-radius: 8px;\r\n//     color: var(--buttonColor);\r\n//     cursor: pointer;\r\n//     @media screen and (max-width: 768px) {\r\n//         width: 287px;\r\n//     }\r\n// `;\r\n\r\n// export const ErrorText = styled(ErrorMessage)`\r\n//   font-size: 15px;\r\n//   color: white;\r\n// `;\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Link } from '@mui/material';\r\nimport styled from '@emotion/styled';\r\nimport { ErrorMessage } from 'formik';\r\n\r\nexport const Container = styled.div `\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 600px;\r\n    width: 100%;\r\n    background: var(--welcomeBgColor);\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n`\r\nexport const Content = styled.div `\r\n  text-align: center;\r\n  background: #111;\r\n  border-radius: 20px;\r\n  @media screen and (max-width: 768px) {\r\n    ;\r\n  }\r\n`\r\nexport const Menu = styled.div`\r\n    background: #9AC43C;\r\n    padding: 30px;\r\n    display: flex;\r\n    border-radius: 20px 20px 0 0;\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  left: 160px;\r\n  top: 40px;\r\n  font-style: normal;\r\n  font-weight: var(--fontWeight500);\r\n  font-size: var(--fontSize18);\r\n  line-height: 27px;\r\n  letter-spacing: -0.02em;\r\n  color: white;\r\n`;\r\n\r\nexport const StyledRegistrationLink = styled(Link)`\r\n  margin-right: 14px;\r\n  font-style: normal;\r\n  font-size: 18px;\r\n  line-height: 27px;\r\n  letter-spacing: -0.02em;\r\n  color: #111;\r\n`;\r\n\r\nexport const Inputs = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 14px;\r\n  align-items: center;\r\n  padding: 30px;\r\n\r\n  input {\r\n    width: 326px;\r\n    height: 49px;\r\n    left: 40px;\r\n    top: 107px;\r\n    color: white;\r\n    background: var(--inputBgColor);\r\n    opacity: 0.4;\r\n    border: 1px solid white;\r\n    padding-left: 18px;\r\n    box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\r\n    border-radius: 8px;\r\n    @media screen and (max-width: 768px) {\r\n        width: 287px;\r\n\r\n    }\r\n  }\r\n`;\r\nexport const PasswordInput = styled.div `\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    gap: 14px;\r\n`\r\nexport const PasswordInputField = styled.input`\r\n  width: 326px;\r\n  height: 49px;\r\n  left: 40px;\r\n  top: 107px;\r\n  color: var(--lightColor);\r\n  background: var(--inputBgColor);\r\n  opacity: 0.4;\r\n  border: 1px solid white;\r\n  padding-left: 18px;\r\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\r\n  border-radius: 8px;\r\n`;\r\n\r\nexport const PasswordToggle = styled.span`\r\n    position: absolute;\r\n    right: 18px;\r\n    top: 19px;\r\n    cursor: pointer;\r\n    color: var(--passwordColor);\r\n`;\r\n\r\nexport const PasswordIcon = styled(FontAwesomeIcon)`\r\n    color: var(--passwordColor);\r\n`;\r\nexport const Svg = styled.svg`\r\n  width: 16.5px;\r\n  height: 16px;\r\n  top: 50%;\r\n  right: 4px;\r\n`;\r\nexport const RegisterBtn = styled.button`\r\n    font-style: normal;\r\n    font-weight: var(--fontWeight500);\r\n    font-size: 14px;\r\n    line-height: 21px;\r\n    text-align: center;\r\n    letter-spacing: -0.02em;\r\n    width: 100%;\r\n    height: 49px;\r\n    margin-top: 24px;\r\n    background: rgb(154, 196, 60);\r\n    border-radius: 8px;\r\n    color: white;\r\n    cursor: pointer;\r\n    @media screen and (max-width: 768px) {\r\n        width: 287px;\r\n    }\r\n`;\r\n\r\nexport const ErrorText = styled(ErrorMessage)`\r\n  font-size: 15px;\r\n  color: white;\r\n`;","import React from 'react'; // { useState }\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { register } from '../../redux/auth/authOperations';\r\nimport { Formik, Field } from 'formik';\r\nimport { useDispatch } from 'react-redux'; // useSelector\r\nimport * as Yup from 'yup';\r\nimport {\r\n  ErrorText,\r\n  Inputs,\r\n  Menu,\r\n  Container,\r\n  PasswordInput,\r\n  Content,\r\n  RegisterBtn,\r\n  StyledRegistrationLink,\r\n  StyledLink,\r\n} from './RegisterForm.styled';\r\nimport { getError } from '../../redux/auth/authSelectors';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst RegisterSchema = Yup.object().shape({\r\n  name: Yup.string().required('Name is required'),\r\n  email: Yup.string()\r\n    .min(6, 'Email must be at least 6 characters')\r\n    .email('Invalid email')\r\n    .required('Email is required'),\r\n  password: Yup.string()\r\n    .min(6, 'Password must be at least 6 characters')\r\n    .required('Password is required'),\r\n});\r\n\r\nfunction RegistrationPage() {\r\n  const navigate = useNavigate();\r\n  // const errorMessage = useSelector(getError);\r\n  const dispatch = useDispatch();\r\n\r\n//   const [showPassword, setShowPassword] = useState(false);\r\n\r\n//   const togglePasswordVisibility = () => {\r\n//     setShowPassword(!showPassword);\r\n//   };\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    const newUser = {\r\n      name: event.target.elements.name.value,\r\n      email: event.target.elements.email.value,\r\n      password: event.target.elements.password.value,\r\n    };\r\n\r\n    const response = await dispatch(register(newUser));\r\n\r\n    if (response.error) {\r\n      toast();\r\n    } else {\r\n      navigate('/');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <form onSubmit={handleSubmit}>\r\n        <Formik\r\n          initialValues={{ name: '', email: '', password: '' }}\r\n          validationSchema={RegisterSchema}\r\n        >\r\n          <Content>\r\n            <Menu>\r\n              <StyledRegistrationLink href=\"register\" underline=\"none\">\r\n                Registration\r\n              </StyledRegistrationLink>\r\n              <StyledLink href=\"login\" underline=\"none\">\r\n                Log In\r\n              </StyledLink>\r\n            </Menu>\r\n            <Inputs>\r\n              <Field autoFocus name=\"name\" type=\"text\" placeholder=\"Name\" />\r\n              <ErrorText name=\"name\" component=\"div\" />\r\n              <Field name=\"email\" type=\"email\" placeholder=\"Email\" />\r\n              <ErrorText name=\"email\" component=\"div\" />\r\n              <PasswordInput>\r\n                <Field\r\n                  name=\"password\"\r\n                //   type={showPassword ? 'text' : 'password'}\r\n                  placeholder=\"Password\"\r\n                />\r\n                <ErrorText name=\"password\" component=\"div\" />\r\n                {/* <PasswordToggle\r\n                  className={`${PasswordToggle} ${PasswordIcon}`}\r\n                  onClick={togglePasswordVisibility}\r\n                >\r\n                  {showPassword ? (\r\n                    <PasswordIcon icon={faEyeSlash} width=\"18px\" />\r\n                  ) : (\r\n                    <Svg>\r\n                      <use stroke=\"gray\" \r\n                    //   xlinkHref={`${sprite}#icon-eye`} \r\n                      />\r\n                    </Svg>\r\n                  )}\r\n                </PasswordToggle> */}\r\n              </PasswordInput>\r\n              <RegisterBtn type=\"submit\">Register Now</RegisterBtn>\r\n            </Inputs>\r\n          </Content>\r\n        </Formik>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default RegistrationPage;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Link } from '@mui/material';\r\nimport styled from '@emotion/styled';\r\nimport { ErrorMessage } from 'formik';\r\n\r\nexport const Container = styled.div `\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 600px;\r\n    width: 100%;\r\n    background: var(--welcomeBgColor);\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n`\r\nexport const Content = styled.div `\r\n  text-align: center;\r\n  background: #111;\r\n  border-radius: 20px;\r\n`\r\nexport const Menu = styled.div`\r\n    background: #9AC43C;\r\n    padding: 30px;\r\n    display: flex;\r\n    border-radius: 20px 20px 0 0;\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  left: 160px;\r\n  top: 40px;\r\n  font-style: normal;\r\n  font-weight: var(--fontWeight500);\r\n  font-size: var(--fontSize18);\r\n  line-height: 27px;\r\n  letter-spacing: -0.02em;\r\n  color: #111;\r\n`;\r\n\r\nexport const StyledRegistrationLink = styled(Link)`\r\n  margin-right: 14px;\r\n  font-style: normal;\r\n  font-size: 18px;\r\n  line-height: 27px;\r\n  letter-spacing: -0.02em;\r\n  color: white;\r\n`;\r\n\r\nexport const Inputs = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 14px;\r\n  align-items: center;\r\n  padding: 30px;\r\n\r\n  input {\r\n    width: 326px;\r\n    height: 49px;\r\n    left: 40px;\r\n    top: 107px;\r\n    color: white;\r\n    background: var(--inputBgColor);\r\n    opacity: 0.4;\r\n    border: 1px solid white;\r\n    padding-left: 18px;\r\n    box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\r\n    border-radius: 8px;\r\n    @media screen and (max-width: 768px) {\r\n        width: 287px;\r\n\r\n    }\r\n  }\r\n`;\r\nexport const PasswordInput = styled.div `\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    gap: 14px;\r\n`\r\nexport const PasswordInputField = styled.input`\r\n  width: 326px;\r\n  height: 49px;\r\n  left: 40px;\r\n  top: 107px;\r\n  color: var(--lightColor);\r\n  background: var(--inputBgColor);\r\n  opacity: 0.4;\r\n  border: 1px solid white;\r\n  padding-left: 18px;\r\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\r\n  border-radius: 8px;\r\n`;\r\n\r\nexport const PasswordToggle = styled.span`\r\n    position: absolute;\r\n    right: 18px;\r\n    top: 19px;\r\n    cursor: pointer;\r\n    color: var(--passwordColor);\r\n`;\r\n\r\nexport const PasswordIcon = styled(FontAwesomeIcon)`\r\n    color: var(--passwordColor);\r\n`;\r\nexport const Svg = styled.svg`\r\n  width: 16.5px;\r\n  height: 16px;\r\n  top: 50%;\r\n  right: 4px;\r\n`;\r\nexport const LoginBtn = styled.button`\r\n    font-style: normal;\r\n    font-weight: var(--fontWeight500);\r\n    font-size: 14px;\r\n    line-height: 21px;\r\n    text-align: center;\r\n    margin-top: 24px;\r\n    letter-spacing: -0.02em;\r\n    width: 100%;\r\n    height: 49px;\r\n    background: rgb(154, 196, 60);\r\n    border-radius: 8px;\r\n    color: white;\r\n    cursor: pointer;\r\n    @media screen and (max-width: 768px) {\r\n        width: 287px;\r\n    }\r\n`;\r\n\r\nexport const ErrorText = styled(ErrorMessage)`\r\n  font-size: 15px;\r\n  color: white;\r\n`;","export const setToken = state => state.auth.token;\r\n\r\n\r\nexport const setName = state => state.auth.user.name;\r\n\r\n// export const setColorTheme = state => state.auth.user.theme;\r\n\r\n// export const getActiveBoard = state => state.auth.user.activeBoard;\r\n\r\n// export const avatarURL = state => state.auth.user.avatarURL;\r\n\r\nexport const isLoggedIn = state => state.auth.isLoggedIn;\r\n\r\nexport const isRefreshing = state => state.auth.isRefreshing;\r\n\r\n// export const getTheme = state => state.auth.user.theme;\r\n\r\nexport const getError = state => state.auth.error;","import React from 'react'; // , { useState }\r\nimport { useNavigate } from 'react-router-dom';\r\n// import sprite from '../../sourse/sprite.svg';\r\nimport { login } from '../../redux/auth/authOperations';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  ErrorText,\r\n  PasswordToggle,\r\n  Menu,\r\n  Inputs,\r\n  Container,\r\n  PasswordInput,\r\n  PasswordIcon,\r\n  Content,\r\n//   Svg,\r\n  LoginBtn,\r\n  StyledRegistrationLink,\r\n  StyledLink,\r\n} from './LoginForm.styled';\r\nimport { setToken } from '../../redux/auth/authSelectors';\r\nimport { Formik, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst LoginSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email('Емейл неправильний')\r\n    .required('Емейл обов\\'язковий'),\r\n  password: Yup.string()\r\n    .min(6, 'Пароль мусить бути більше 8 букв')\r\n    .required('Пароль обов\\'язковий'),\r\n});\r\n\r\nfunction LoginPage() {\r\n  const navigate = useNavigate();\r\n//   const [showPassword, setShowPassword] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n//   const togglePasswordVisibility = () => {\r\n//     setShowPassword(!showPassword);\r\n//   };\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    const currentUser = {\r\n      email: event.target.elements.email.value,\r\n      password: event.target.elements.password.value,\r\n    };\r\n\r\n    const response = await dispatch(login(currentUser, setToken));\r\n\r\n    if (response.error) {\r\n      toast.error();\r\n    } else {\r\n      navigate('/');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <form onSubmit={handleSubmit}>\r\n        <Formik\r\n          initialValues={{ email: '', password: '' }}\r\n          validationSchema={LoginSchema}\r\n        >\r\n          <Content>\r\n            <Menu>\r\n                <StyledRegistrationLink href=\"register\" underline=\"none\">\r\n                  Registration\r\n                </StyledRegistrationLink>\r\n                <StyledLink href=\"login\" underline=\"none\">\r\n                  Log In\r\n                </StyledLink>\r\n            </Menu>\r\n            <Inputs>\r\n              <Field autoFocus name=\"email\" type=\"email\" placeholder=\"Email\" />\r\n              <ErrorText name=\"email\" component=\"div\" />\r\n              <PasswordInput>\r\n                <Field\r\n                  name=\"password\"\r\n                //   type={showPassword ? 'text' : 'password'}\r\n                  placeholder=\"Password\"\r\n                />\r\n                <ErrorText name=\"password\" component=\"div\" />\r\n\r\n                <PasswordToggle\r\n                  className={`${PasswordToggle} ${PasswordIcon}`}\r\n                //   onClick={togglePasswordVisibility}\r\n                >\r\n                  {/* {showPassword ? (\r\n                    <PasswordIcon icon={faEyeSlash} width=\"18px\" />\r\n                  ) : (\r\n                    <Svg>\r\n                      <use\r\n                        stroke=\"gray\"\r\n                        // xlinkHref={`${sprite}#icon-eye`}\r\n                        style={{ color: '#737373' }}\r\n                      />\r\n                    </Svg>\r\n                  )} */}\r\n                </PasswordToggle>\r\n              </PasswordInput>\r\n              <LoginBtn type=\"submit\">Log In Now</LoginBtn>\r\n            </Inputs>\r\n            {/* <LoginBtn>Log In Now</LoginBtn> */}\r\n          </Content>\r\n        </Formik>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default LoginPage;","import { useParams } from 'react-router-dom';\r\nimport RegisterForm from '../components/RegisterForm/RegisterForm'\r\nimport LoginForm from '../components/LoginForm/LoginForm'\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nconst AuthPage = () => {\r\n  const { id } = useParams();\r\n  return (\r\n    <div>\r\n      {id === 'login' && <LoginForm />}\r\n      {id === 'register' && <RegisterForm /> }\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\nexport default AuthPage;"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","Menu","_templateObject3","StyledLink","Link","_templateObject4","StyledRegistrationLink","_templateObject5","Inputs","_templateObject6","PasswordInput","_templateObject7","RegisterBtn","input","_templateObject8","span","_templateObject9","FontAwesomeIcon","_templateObject10","svg","_templateObject11","button","_templateObject12","ErrorText","ErrorMessage","_templateObject13","RegisterSchema","Yup","shape","name","required","email","min","password","navigate","useNavigate","dispatch","useDispatch","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","newUser","wrap","_context","prev","next","preventDefault","target","elements","value","register","sent","error","toast","stop","_x","apply","arguments","_jsx","children","onSubmit","Formik","initialValues","validationSchema","_jsxs","href","underline","Field","autoFocus","type","placeholder","component","PasswordToggle","PasswordIcon","LoginBtn","setToken","state","auth","token","LoginSchema","currentUser","login","className","concat","id","useParams","LoginForm","RegisterForm","ToastContainer"],"sourceRoot":""}